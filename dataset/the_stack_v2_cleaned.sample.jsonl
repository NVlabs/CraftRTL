{"index": 0, "input": "module shift_registers_0 (clk, clken, SI, SO);\nparameter WIDTH = 32;\ninput clk, clken, SI;\noutput SO;\nreg [WIDTH−1:0] shreg;\nalways @(posedge clk)\nbegin\nif (clken)\nshreg = {shreg[WIDTH−2:0], SI};\nend\nassign SO = shreg[WIDTH−1];\nendmodule"}
{"index": 1, "input": "module shift_registers_0 (clk, clken, SI, SO);\nparameter WIDTH = 32;\ninput clk, clken, SI;\noutput SO;\nreg [WIDTH−1:0] shreg;\nalways @(posedge clk)\nbegin\nif (clken)\nshreg = {shreg[WIDTH−2:0], SI};\nend\nassign SO = shreg[WIDTH−1];\nendmodule"}
{"index": 2, "input": "module up_counter(\ninput clk,\ninput reset,\noutput[3:0] counter\n);\nreg [3:0] counter_up;\n// up counter\nalways @(posedge clk or posedge reset)\nbegin\nif(reset)\ncounter_up <= 4’d0;\nelse\ncounter_up <= counter_up + 4’d1;\nend\nassign counter = counter_up;\nendmodule\n"}
